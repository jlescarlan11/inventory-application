<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Pokémon Inventory</title>
    <link href="/stylesheets/style.css" rel="stylesheet" />
  </head>
  <body
    class="relative flex flex-col py-16 px-8 text-[var(--color-text)] min-h-dvh sm:px-4 bg-no-repeat bg-center bg-fixed bg-cover"
    style="background-image: url('/wp10742485.webp')"
  >
    <!-- Overlay -->
    <div class="absolute inset-0 bg-[var(--color-primary)]/50 z-0"></div>
    <%- include('navbar') %>
    <main
      class="container sm:mx-auto py-4 flex flex-col gap-4 justify-start z-10"
    >
      <!-- Header Section -->
      <div class="flex justify-between items-center mb-4">
        <h1 class="text-base sm:text-lg font-bold">
          Total Pokemon: <%= pokemons.length %>
        </h1>
        <a
          href="/pokemons/create"
          class="bg-[var(--color-accent)] text-xs sm:text-base hidden sm:block text-[var(--color-primary)] px-2 py-1 rounded-md hover:bg-[var(--color-accent)]/90"
        >
          Create New Pokemon
        </a>
        <a
          href="/pokemons/create"
          class="bg-[var(--color-accent)] text-xs block sm:hidden text-[var(--color-primary)] px-2 py-1 rounded-md hover:bg-[var(--color-accent)]/90"
        >
          Create
        </a>
      </div>

      <!-- Search Section -->
      <details
        class="bg-[var(--color-secondary)]/70 backdrop-blur-md rounded-lg shadow-md mb-4 ${selectedTypes.length === 0 ? 'open' : ''}"
      >
        <summary class="px-6 py-4 cursor-pointer list-none">
          <div class="flex items-center gap-2">
            <svg
              class="w-5 h-5"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
              ></path>
            </svg>
            <span class="font-medium">Search Pokémon</span>
          </div>
        </summary>

        <form action="/pokemons/search" method="GET" class="p-6 border-t">
          <!-- Name Search -->
          <div class="mb-4">
            <label for="name" class="block text-sm font-medium mb-2"
              >Name</label
            >
            <input
              type="text"
              name="name"
              value="<%= typeof name !== 'undefined' ? name : '' %>"
              class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-black"
              placeholder="Search by Pokémon name..."
              autocomplete="off"
            />
          </div>

          <!-- Type Filter with native dropdown -->
          <div class="mb-4">
            <label class="block text-sm font-medium mb-2">Types</label>
            <!-- Selected Types Display -->
            <div id="selected-types" class="flex flex-wrap gap-2 mb-2">
              <% selectedTypes.forEach(typeId => { %> <% const type =
              allTypes.find(t => t.id == typeId); %> <% if (type) { %>
              <div
                class="bg-[var(--color-accent)]/50 text-[var(--color-primary)] px-2 py-1 rounded flex items-center"
              >
                <span class="text-xs"><%= type.name %></span>
                <button
                  type="button"
                  data-type-id="<%= type.id %>"
                  class="ml-2 hover:text-[var(--color-accent)]"
                  onclick="removeType(this)"
                >
                  ×
                </button>
              </div>
              <% } }); %>
            </div>

            <!-- Hidden inputs for selected types -->
            <div id="hidden-type-inputs">
              <% selectedTypes.forEach(typeId => { %>
              <input type="hidden" name="types[]" value="<%= typeId %>" />
              <% }); %>
            </div>

            <!-- Native Select Element for Type Selection -->
            <select
              id="type-select-native"
              class="w-full px-3 py-2 border border-[var(--color-text)] rounded-md appearance-none focus:outline-none focus:ring-2 focus:ring-[var(--color-accent)] text-[var(--color-text)]/50"
              onchange="handleTypeSelect(event)"
            >
              <option value="" disabled selected>Select a type...</option>
              <% allTypes.forEach(type => { %> <% if
              (!selectedTypes.includes(String(type.id))) { %>
              <option value="<%= type.id %>" class="text-primary">
                <%= type.name %>
              </option>
              <% } %> <% }); %>
            </select>
          </div>

          <button
            type="submit"
            class="bg-[var(--color-accent)] text-[var(--color-primary)] px-4 py-2 rounded-md hover:bg-[var(--color-accent)]/90"
          >
            Search
          </button>
        </form>
      </details>

      <!-- Pokémon Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        <% pokemons.forEach(pokemon => { const type1 = allTypes.find(t => t.id
        === pokemon.type1); const type2 = pokemon.type2 ? allTypes.find(t =>
        t.id === pokemon.type2) : null; %>
        <div
          class="bg-[var(--color-secondary)]/70 backdrop-blur-md rounded-lg shadow-md p-4"
        >
          <div class="flex justify-between items-start mb-2">
            <h3 class="flex items-center gap-2 text-lg font-semibold">
              <span class="text-[var(--color-text)]/50 text-xs">
                #<%= pokemon.id.toString().padStart(3, '0') %>
              </span>
              <%= pokemon.pokemon_name %>
            </h3>
            <div>
              <a href="pokemons/<%= pokemon.id %>/update" class="text-text">
                <span class="material-symbols-outlined text-xs">edit</span>
              </a>
              <form
                action="pokemons/<%= pokemon.id %>/delete"
                method="POST"
                style="display: inline"
              >
                <button
                  type="submit"
                  class="text-text text-xs"
                  onclick="return confirm('Are you sure you want to delete this pokemon?');"
                >
                  <span class="material-symbols-outlined">delete</span>
                </button>
              </form>
            </div>
          </div>
          <div class="flex flex-wrap gap-2">
            <% if (pokemon.type1) { %>
            <span class="bg-accent/50 text-xs rounded-lg px-2 py-1"
              ><%= pokemon.type1 %></span
            >
            <% } %> <% if (pokemon.type2) { %>
            <span class="bg-accent/50 text-xs rounded-lg px-2 py-1"
              ><%= pokemon.type2 %></span
            >
            <% } %>
          </div>
        </div>
        <% }); %>
      </div>
      <%- include('footer') %>
    </main>

    <script>
      // Called when a new type is selected
      function handleTypeSelect(event) {
        const select = event.target;
        const selectedOption = select.options[select.selectedIndex];
        const typeId = selectedOption.value;
        const typeName = selectedOption.text;

        if (typeId) {
          // Add new tag to selected types display
          const selectedTypesDiv = document.getElementById("selected-types");
          const newTag = document.createElement("div");
          newTag.className =
            "bg-[var(--color-accent)]/50 text-[var(--color-primary)] px-2 py-1 rounded flex items-center";
          newTag.innerHTML = `
            <span class="text-xs">${typeName}</span>
            <button 
              type="button"
              data-type-id="${typeId}"
              class="ml-2 hover:text-[var(--color-accent)]"
              onclick="removeType(this)"
            >
              ×
            </button>
          `;
          selectedTypesDiv.appendChild(newTag);

          // Add a hidden input for form submission
          const hiddenInputs = document.getElementById("hidden-type-inputs");
          const input = document.createElement("input");
          input.type = "hidden";
          input.name = "types[]";
          input.value = typeId;
          hiddenInputs.appendChild(input);

          // Remove the selected option from the native select
          selectedOption.remove();
        }
        // Reset the select field
        select.value = "";
      }

      // Removes a type when the corresponding remove button is clicked
      function removeType(button) {
        const typeId = button.dataset.typeId;
        // Extract the type name from the tag
        const typeName = button.previousElementSibling.textContent.trim();

        // Remove the tag
        button.parentElement.remove();

        // Remove the corresponding hidden input
        const hiddenInput = document.querySelector(
          `#hidden-type-inputs input[value="${typeId}"]`
        );
        if (hiddenInput) {
          hiddenInput.remove();
        }

        // Add the removed type back to the select options
        const select = document.getElementById("type-select-native");
        const option = document.createElement("option");
        option.value = typeId;
        option.textContent = typeName;
        select.appendChild(option);
      }
    </script>
  </body>
</html>
