<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Pokémon Inventory</title>
    <link href="/stylesheets/style.css" rel="stylesheet" />
    <style></style>
  </head>
  <body
    class="relative flex flex-col py-16 px-8 text-[var(--color-text)] min-h-screen sm:px-4 bg-no-repeat bg-center bg-fixed bg-cover"
    style="background-image: url('/wp10742485.webp')"
  >
    <!-- Overlay -->
    <div class="absolute inset-0 bg-[var(--color-primary)]/50 z-0"></div>
    <%- include('navbar') %>
    <main
      class="container sm:mx-auto py-4 flex flex-col gap-4 justify-start z-10"
    >
      <!-- Header Section -->
      <div class="flex justify-between items-center mb-4">
        <h1 class="text-base sm:text-lg font-bold">
          Total Pokemon: <%= pokemons.length %>
        </h1>
        <a
          href="/pokemons/create"
          class="bg-[var(--color-accent)] text-xs sm:text-base hidden sm:block text-[var(--color-primary)] px-2 py-1 rounded-md hover:bg-[var(--color-accent)]/90"
        >
          Create New Pokemon
        </a>
        <a
          href="/pokemons/create"
          class="bg-[var(--color-accent)] text-xs block sm:hidden text-[var(--color-primary)] px-2 py-1 rounded-md hover:bg-[var(--color-accent)]/90"
        >
          Create
        </a>
      </div>

      <!-- Search Section -->
      <details
        class="bg-[var(--color-secondary)]/70 backdrop-blur-md rounded-lg shadow-md mb-4"
        <%="selectedTypes.length"
      >
        0 ? 'open' : '' %>>
        <summary class="px-6 py-4 cursor-pointer list-none">
          <div class="flex items-center gap-2">
            <svg
              class="w-5 h-5"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
              ></path>
            </svg>
            <span class="font-medium">Search Pokémon</span>
          </div>
        </summary>

        <form action="/pokemons/search" method="GET" class="p-6 border-t">
          <!-- Name Search -->
          <div class="mb-4">
            <label for="name" class="block text-sm font-medium mb-2"
              >Name</label
            >
            <input
              type="text"
              name="name"
              value="<%= typeof name !== 'undefined' ? name : '' %>"
              class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-black"
              placeholder="Search by Pokémon name..."
              autocomplete="off"
            />
          </div>

          <!-- Type Filter -->
          <div class="mb-4">
            <label class="block text-sm font-medium mb-2">Types</label>
            <div class="relative">
              <!-- Hidden select for form submission -->
              <select name="types" multiple class="hidden" id="type-select">
                <% selectedTypes.forEach(typeId => { %>
                <option value="<%= typeId %>" selected></option>
                <% }); %>
              </select>

              <!-- Selected types display -->
              <div id="selected-types" class="flex flex-wrap gap-2 mb-2">
                <% selectedTypes.forEach(typeId => { const type =
                allTypes.find(t => t.id == typeId); if (type) { %>
                <div class="type-tag">
                  <%= type.name %>
                  <button
                    type="button"
                    class="ml-2 text-gray-500 hover:text-gray-700"
                    onclick="removeType('<%= type.id %>')"
                  >
                    ×
                  </button>
                </div>
                <% } }); %>
              </div>

              <!-- Custom dropdown -->
              <div class="relative">
                <button
                  type="button"
                  id="type-dropdown-toggle"
                  onclick="toggleDropdown()"
                  class="w-full px-3 py-2 text-left border border-[var(--color-text)] rounded-md text-[var(--color-text)]/50 focus:outline-none focus:ring-2 focus:ring-black"
                >
                  Select types...
                </button>

                <div
                  id="type-dropdown"
                  class="hidden absolute w-full mt-1 bg-[var(--color-secondary)]/70 backdrop-blur-md border rounded-md shadow-lg z-10 max-h-60 overflow-auto"
                >
                  <div id="type-options">
                    <% allTypes.forEach(type => { if
                    (!selectedTypes.includes(String(type.id))) { %>
                    <div
                      class="border-y-[1px] border-y-[var(--color-text)]/50 px-4 py-2 cursor-pointer"
                      data-type-id="<%= type.id %>"
                      onclick="selectType(this)"
                    >
                      <%= type.name %>
                    </div>
                    <% } }); %>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <button
            type="submit"
            class="bg-[var(--color-accent)] text-[var(--color-primary)] px-4 py-2 rounded-md hover:bg-[var(--color-accent)]/90"
          >
            Search
          </button>
        </form>
      </details>

      <!-- Pokémon Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        <% pokemons.forEach(pokemon => { const type1 = allTypes.find(t => t.id
        === pokemon.type1); const type2 = pokemon.type2 ? allTypes.find(t =>
        t.id === pokemon.type2) : null; %>
        <div
          class="bg-[var(--color-secondary)]/70 backdrop-blur-md rounded-lg shadow-md p-4"
        >
          <div class="flex justify-between items-start mb-2">
            <h3 class="flex items-center gap-2 text-lg font-semibold">
              <span class="text-[var(--color-text)]/50 text-xs">
                #<%= pokemon.id.toString().padStart(3, '0') %>
              </span>
              <%= pokemon.pokemon_name %>
            </h3>
            <div>
              <a href="pokemons/<%= pokemon.id %>/update" class="text-text"
                ><span class="material-symbols-outlined text-xs">
                  edit
                </span></a
              >
              <form
                action="pokemons/<%= pokemon.id %>/delete"
                method="POST"
                style="display: inline"
              >
                <button
                  type="submit"
                  class="text-text text-xs"
                  onclick="return confirm('Are you sure you want to delete this pokemon?');"
                >
                  <span class="material-symbols-outlined"> delete </span>
                </button>
              </form>
            </div>
          </div>
          <div class="flex flex-wrap gap-2">
            <% if (pokemon.type1) { %>
            <span class="bg-accent/50 text-xs rounded-lg px-2 py-1"
              ><%= pokemon.type1 %>
            </span>
            <% } %> <% if (pokemon.type2) { %>
            <span class="bg-accent/50 text-xs rounded-lg px-2 py-1">
              <%= pokemon.type2 %>
            </span>
            <% } %>
          </div>
        </div>
        <% }); %>
      </div>
    </main>

    <%- include('footer') %>

    <script>
      function toggleDropdown() {
        const dropdown = document.getElementById("type-dropdown");
        dropdown.classList.toggle("hidden");
      }

      function selectType(element) {
        const typeId = element.dataset.typeId;
        const typeName = element.textContent;

        // Add to selected types display
        const selectedTypesDiv = document.getElementById("selected-types");
        const newTag = document.createElement("div");
        newTag.className = "type-tag";
        newTag.innerHTML = `
              ${typeName}
              <button
                  type="button"
                  class="ml-2 text-gray-500 hover:text-gray-700"
                  onclick="removeType('${typeId}')"
              >
                  ×
              </button>
          `;
        selectedTypesDiv.appendChild(newTag);

        // Add to hidden select
        const hiddenSelect = document.getElementById("type-select");
        const option = document.createElement("option");
        option.value = typeId;
        option.selected = true;
        hiddenSelect.appendChild(option);

        // Remove from dropdown options
        element.remove();

        // Close dropdown
        toggleDropdown();
      }

      function removeType(typeId) {
        // Remove from selected display
        const button = document.querySelector(
          `#selected-types button[onclick="removeType('${typeId}')"]`
        );
        if (button) {
          button.closest(".type-tag").remove();
        }

        // Remove from hidden select
        const option = document.querySelector(
          `#type-select option[value="${typeId}"]`
        );
        if (option) {
          option.remove();
        }

        // Add back to dropdown options
        const type = allTypes.find((t) => t.id == typeId);
        if (type) {
          const optionsDiv = document.getElementById("type-options");
          const newOption = document.createElement("div");
          newOption.className = "dropdown-option px-4 py-2 cursor-pointer";
          newOption.dataset.typeId = typeId;
          newOption.textContent = type.name;
          newOption.onclick = () => selectType(newOption);
          optionsDiv.appendChild(newOption);
        }
      }

      // Close dropdown when clicking outside
      document.addEventListener("click", function (event) {
        const dropdown = document.getElementById("type-dropdown");
        const button = document.getElementById("type-dropdown-toggle");
        if (
          !dropdown.contains(event.target) &&
          !button.contains(event.target)
        ) {
          dropdown.classList.add("hidden");
        }
      });
    </script>
  </body>
</html>
