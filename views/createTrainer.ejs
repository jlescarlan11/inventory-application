<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Create New Trainer</title>
    <link href="/stylesheets/style.css" rel="stylesheet" />
  </head>
  <body
    class="relative flex flex-col py-16 px-8 text-[var(--color-text)] min-h-screen sm:px-4 bg-no-repeat bg-center bg-fixed bg-cover"
    style="background-image: url('/wp10742485.webp')"
  >
    <!-- Overlay -->
    <div class="absolute inset-0 bg-[var(--color-primary)]/50 z-0"></div>
    <%- include('navbar') %>
    <main class="container sm:mx-auto py-4 gap-4 justify-start z-10">
      <div
        class="max-w-2xl mx-auto bg-[var(--color-secondary)]/70 backdrop-blur-md rounded-lg shadow-md p-6"
      >
        <h1 class="text-2xl font-bold mb-6">Create New Trainer</h1>
        <%- include('partials/errors') %>
        <form action="/trainers/create" method="POST" class="space-y-6">
          <!-- Name Input -->
          <div>
            <label for="name" class="block text-sm font-medium mb-2">
              Trainer Name
            </label>
            <input
              type="text"
              id="name"
              name="name"
              value="<%= typeof name !== 'undefined' ? name : '' %>"
              placeholder="Enter Trainer's Name"
              class="w-full px-3 py-2 border border-[var(--color-text)] rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--color-accent)]"
              required
            />
          </div>

          <!-- Pokémon Selection -->
          <div>
            <label class="block text-sm font-medium mb-2"> Pokémon Team </label>

            <!-- Selected Pokémon Tags -->
            <div id="selected-pokemon" class="flex flex-wrap gap-2 mb-3">
              <% (selectedPokemons || []).forEach(pokemonId => { const pokemon =
              pokemons.find(p => p.id == pokemonId); %> <% if (pokemon) { %>
              <div
                class="bg-[var(--color-accent)]/50 text-[var(--color-primary)] px-2 py-1 rounded flex items-center"
              >
                <span class="text-xs"><%= pokemon.pokemon_name %></span>
                <button
                  type="button"
                  data-pokemon-id="<%= pokemon.id %>"
                  class="ml-2 hover:text-[var(--color-accent)]"
                  onclick="removePokemon(this)"
                >
                  ×
                </button>
              </div>
              <% } %> <% }); %>
            </div>

            <!-- Hidden selected values -->
            <div id="hidden-inputs">
              <% (selectedPokemons || []).forEach(pokemonId => { %>
              <input type="hidden" name="pokemons[]" value="<%= pokemonId %>" />
              <% }); %>
            </div>

            <!-- Dropdown Container -->
            <div class="relative">
              <button
                type="button"
                onclick="toggleDropdown()"
                class="w-full px-3 py-2 text-left border border-[var(--color-text)] rounded-md text-[var(--color-text)]/50 focus:outline-none focus:ring-2 focus:ring-[var(--color-accent)]"
              >
                Select Pokémon...
              </button>

              <!-- Custom Dropdown -->
              <div
                id="pokemon-dropdown"
                class="hidden absolute w-full mt-1 bg-[var(--color-secondary)] border border-[var(--color-text)] rounded-md shadow-lg z-10 max-h-60 overflow-auto"
              >
                <div id="pokemon-list" class="divide-y">
                  <% pokemons.forEach(pokemon => { %> <% if (!(selectedPokemons
                  || []).includes(String(pokemon.id))) { %>
                  <div
                    class="px-4 py-2 hover:bg-[var(--color-accent)]/50 cursor-pointer"
                    data-pokemon-id="<%= pokemon.id %>"
                    onclick="selectPokemon(this)"
                  >
                    <%= pokemon.pokemon_name %>
                  </div>
                  <% } %> <% }); %>
                </div>
              </div>
            </div>
          </div>

          <!-- Form Actions -->
          <div class="flex justify-end space-x-4">
            <a
              href="/trainers"
              class="px-4 py-2 hover:text-[var(--color-accent)]"
            >
              Cancel
            </a>
            <button
              type="submit"
              class="px-4 py-2 bg-[var(--color-accent)] text-[var(--color-primary)] rounded-md hover:bg-[var(--color-accent)]/90 focus:outline-none focus:ring-2 focus:ring-[var(--color-accent)] focus:ring-offset-2"
            >
              Create
            </button>
          </div>
        </form>
      </div>
      <%- include('footer') %>
    </main>

    <script>
      function toggleDropdown() {
        const dropdown = document.getElementById("pokemon-dropdown");
        dropdown.classList.toggle("hidden");
      }

      function selectPokemon(element) {
        const pokemonId = element.dataset.pokemonId;
        const pokemonName = element.textContent.trim();

        // Add to selected list
        const selectedDiv = document.getElementById("selected-pokemon");
        const newTag = document.createElement("div");
        newTag.className =
          "bg-[var(--color-accent)]/50 text-[var(--color-primary)] px-2 py-1 rounded flex items-center";
        newTag.innerHTML = `
                <span>${pokemonName}</span>
                <button 
                    type="button"
                    data-pokemon-id="${pokemonId}"
                    class="ml-2 hover:text-[var(--color-accent)]"
                    onclick="removePokemon(this)"
                >
                    ×
                </button>
            `;
        selectedDiv.appendChild(newTag);

        // Add hidden input
        const hiddenInputs = document.getElementById("hidden-inputs");
        const input = document.createElement("input");
        input.type = "hidden";
        input.name = "pokemons[]";
        input.value = pokemonId;
        hiddenInputs.appendChild(input);

        // Remove from dropdown
        element.remove();

        // Close dropdown
        toggleDropdown();
      }

      function removePokemon(button) {
        const pokemonId = button.dataset.pokemonId;
        const pokemonName = button.previousElementSibling.textContent;

        // Remove tag
        button.parentElement.remove();

        // Remove hidden input
        document
          .querySelector(`#hidden-inputs input[value="${pokemonId}"]`)
          .remove();

        // Add back to dropdown
        const pokemonList = document.getElementById("pokemon-list");
        const newOption = document.createElement("div");
        newOption.className =
          "px-4 py-2 hover:bg-[var(--color-accent)]/50 cursor-pointer";
        newOption.dataset.pokemonId = pokemonId;
        newOption.textContent = pokemonName;
        newOption.onclick = () => selectPokemon(newOption);
        pokemonList.appendChild(newOption);
      }

      // Close dropdown when clicking outside
      document.addEventListener("click", function (event) {
        const dropdown = document.getElementById("pokemon-dropdown");
        const button = document.querySelector('[onclick="toggleDropdown()"]');
        if (
          !dropdown.contains(event.target) &&
          !button.contains(event.target)
        ) {
          dropdown.classList.add("hidden");
        }
      });
    </script>
  </body>
</html>
